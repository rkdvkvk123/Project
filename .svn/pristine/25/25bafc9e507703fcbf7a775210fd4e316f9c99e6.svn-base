package com.jobrecipe.advertisement;

import java.util.ArrayList;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jobrecipe.advertisement.service.AdvertisementService;
import com.jobrecipe.advertisement.vo.AdvertisementVO;
import com.jobrecipe.advertisement.vo.Paging;
import com.jobrecipe.advertisement.vo.SearchCriteria;
import com.jobrecipe.advertisement.vo.PageMaker;

@Controller
@RequestMapping("/hire/*")
public class AdvertisementController {

	@Resource(name="advertisementService")
	private AdvertisementService advertisementService;

	@RequestMapping(value = "/Search_Job.do") //디데이, 조회수 순 공고 5개씩만 출력
	public String Search(Model model, SearchCriteria scri) throws Exception {
		
		ArrayList<AdvertisementVO> list = advertisementService.searchInfo(); //D-day순
		ArrayList<AdvertisementVO> list1 = advertisementService.countInfo(); //조회수 순
		model.addAttribute("list", list);
		model.addAttribute("list1", list1);
		
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(scri);
		pageMaker.setTotalCount(advertisementService.searchList(scri));
		
		model.addAttribute("pageMaker", pageMaker);
		
		return "hire/Search_Job";
	}
	
	@RequestMapping(value = "/Search_Job2.do") //검색했을 때 나오는 공고
	public String SearchTitle(SearchCriteria scri, Model model) throws Exception {
	   
	    ArrayList<AdvertisementVO> list = advertisementService.searchTitle(scri); //찾을 내용
		
	    PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(scri);
		pageMaker.setTotalCount(advertisementService.searchList(scri));
		
		model.addAttribute("pageMaker", pageMaker);
	    
		model.addAttribute("title", scri);
	    model.addAttribute("list", list);
	    
	    return "hire/Search_Job2";
	}
	
	@RequestMapping(value = "/Search_Job25.do") // 저장/저장취소
	@ResponseBody
	public String Save(AdvertisementVO vo, Model model) throws Exception {
		if(vo.getAd_save() == 0) {
			advertisementService.UpdateSave(vo);
		} else {
			advertisementService.UpdateSaveCancel(vo);
		}
		AdvertisementVO vo1 =  advertisementService.selectSaveOne(vo);
		String save = Integer.toString(vo1.getAd_save());
		
		return save;
	}
	
	@RequestMapping(value="/aAllInfo.do") //마감순 공고 리스트, 상세 공고
	public String InfoList(AdvertisementVO vo, Model model, Paging cri) throws Exception {
		
		AdvertisementVO imsi;
		advertisementService.UpdateCount(vo); //조회수 증가
		if(vo.getAd_no() != 0) { 
			imsi = advertisementService.aInfo(vo); //검색창에서 눌러서 왔을 때
		} else {
			imsi = advertisementService.cInfo_Date_Vo(cri); //페이지 눌러서 왔을 때
		}
		model.addAttribute("imsi",imsi); 
		model.addAttribute("info",advertisementService.cInfo_Date(cri));
		
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(advertisementService.listCount());

		model.addAttribute("pageMaker", pageMaker);
	
		return "hire/CompanyInfo"; 
	}
	
	@RequestMapping(value="/aAllInfo1.do") //평점순 공고 리스트, 상세 공고
	public String InfoList1(Paging cri, Model model) throws Exception {
		
		ArrayList<AdvertisementVO> info = advertisementService.cInfo_Star(cri);
		AdvertisementVO imsi = advertisementService.cInfo_Star_Vo(cri);
		model.addAttribute("info", info);
		model.addAttribute("imsi", imsi);
		
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(advertisementService.listCount());
		
		model.addAttribute("pageMaker", pageMaker);
		
		return "hire/CompanyInfo1";
	}
	
	
	@RequestMapping(value="/aInfo.do") //공고 하나 상세
	public String Info1(AdvertisementVO vo, Model model) throws Exception {
		AdvertisementVO imsi = advertisementService.aInfo(vo);
		model.addAttribute("imsi",imsi); 
		return "hire/CompanyInfo"; 
	}
	
	
	
	

}
