package com.jobrecipe.profile.controller;

import java.util.ArrayList;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jobrecipe.profile.service.ProfileService;
import com.jobrecipe.profile.service.ProfileServiceImpl;
import com.jobrecipe.profile.vo.ProfileVO;
import com.jobrecipe.review.service.ReviewServiceimpl;
import com.jobrecipe.review.vo.ReviewVO;
import com.jobrecipe.user.service.UserService;
import com.jobrecipe.user.service.UserServiceImpl;
import com.jobrecipe.user.vo.UserVO;

@Controller
public class ProfileController {

	@Resource(name = "ProfileService")
	private ProfileServiceImpl profileService;

	@Resource(name = "UserService")
	private UserServiceImpl userService;

	@Resource(name = "reviewService")
	private ReviewServiceimpl reviewService;
	
	/*
	 * 마이페이지 링크
	 */
	@RequestMapping(value = "/settings.do")
	public String setting(UserVO vo1) {
		return "profile/settings";
	}
	
	/*
	 * 내프로필 링크
	 */
	@RequestMapping(value = "/resumes.do")
	public String resumesForm(HttpSession session, Model model) {
		UserVO loginInfo = (UserVO) session.getAttribute("login");
		int u_no = loginInfo.getU_no();
		model.addAttribute("profileVO", profileService.getProfile(u_no));
		model.addAttribute("eduVOList", profileService.getEducation(u_no));
		model.addAttribute("carVOList", profileService.getCareer(u_no));
		model.addAttribute("actAwardVOList", profileService.getActAward(u_no));
		model.addAttribute("certiOtherVOList", profileService.getCertiOther(u_no));
		model.addAttribute("portVOList", profileService.getPortfolio(u_no));
		return "profile/resumes";
	}
	
	/* 
	 * 설문조사 페이지에서 다음을 누르면 팔로잉 기업 체크 페이지로 이동하며,
	 * rec_profile 테이블에 회원 기본 정보 저장
	 */
	@RequestMapping(value = "insertProfile.do")
	public String insertProfile(ProfileVO profileVO, Model model) {
		profileService.insertProfile(profileVO);
		model.addAttribute("u_no", profileVO.getU_no());
		return "wizard/signup_follow";
	}
	
	/*
	 * 이력서 작성시
	 */
	@RequestMapping(value = "insertResume.do", method = RequestMethod.POST)
	public String insertResume(ProfileVO profileVO) {
		//profileService.updateProfile(u_no);
		return "profile/settings";	
	}
	
	@RequestMapping(value = "drafts.do", method = RequestMethod.GET)
	public String drafts(UserVO vo, HttpSession session, HttpServletRequest request) throws Exception {
		return "/profile/drafts";
	}

	@RequestMapping(value = "job_applicants.do", method = RequestMethod.GET)
	public String job_applicants(UserVO vo, HttpSession session, HttpServletRequest request) throws Exception {

		return "/profile/job_applicants";
	}

	// 내가 쓴 리뷰 확인
	@RequestMapping(value = "/reviews.do", method = RequestMethod.GET)
	public String review1(Model model, HttpSession session) throws Exception {
		UserVO loginInfo = (UserVO) session.getAttribute("login");
		int u_no1 = loginInfo.getU_no();
		ArrayList<ReviewVO> list = profileService.getReview(u_no1);
		model.addAttribute("list", list);

		return "/profile/reviews";
	}

	// 마이페이지에서 이메일 수신 동의 페이지 이동
	@RequestMapping(value = "/newsletter.do", method = RequestMethod.GET)
	public String newsletter(UserVO vo, HttpSession session, HttpServletRequest request) throws Exception {

		return "/profile/newsletter";
	}

	// 마이페이지에서 이메일 수신 동의 로직 처리
	@RequestMapping(value = "/newsletter.do", method = RequestMethod.POST)
	public String newsletter1(UserVO vo, HttpSession session, HttpServletRequest request) throws Exception {
		String u_email = request.getParameter("u_email");
		int cnt = Integer.parseInt(request.getParameter("newsck"));

		UserVO user = new UserVO();
		user.setU_email(u_email);
		user.setU_newsLetter(cnt);

		profileService.newsCheck(user);

		return "/profile/settings";
	}

	// 마이페이지에서 비밀번호 변경 페이지 이동
	@RequestMapping(value = "/change_password.do", method = RequestMethod.GET)
	public String changePasswd(UserVO vo, HttpSession session, HttpServletRequest request) throws Exception {

		return "/profile/password";
	}

	// 마이페이지 비밀번호 변경 로직처리
	@RequestMapping(value = "/change_password.do", method = RequestMethod.POST)
	public String changePasswd1(UserVO vo, HttpSession session, HttpServletRequest request) throws Exception {
		String u_email = request.getParameter("u_email");
		String u_pw = request.getParameter("u_pw");

		UserVO user = new UserVO();
		user.setU_email(u_email);
		user.setU_pw(u_pw);

		profileService.pass_change(user);

		if (user.getU_pw().equals(u_pw)) {
			return "/profile/settings";
		} else {
			return "/profile/password";
		}
	}

	// 리뷰 추가 페이지
	@RequestMapping(value = "/InsertReviewForm.do")
	public String insertReviewForm() {

		return "/profile/InsertReviewForm";
	}

	// 리뷰 추가 페이지
	@RequestMapping(value = "/company1.do", produces = "application/text; charset=utf8")
	@ResponseBody
	public String company1(String rev_name) {

		String rev_name1 = profileService.searchc(rev_name);
		String msg;

		if (rev_name1 != null) {
			msg = rev_name1;
		} else {
			msg = "존재하지 않는 회사입니다.";
		}

		return msg;

	}
	
	/*
	 * @RequestMapping(value = "/change_password") public String
	 * change_password(UserVO vo1) { return "profile/password"; }
	 */
	
	/*
	 * @RequestMapping(value = "/newsletter.do") public String newsletter(UserVO vo)
	 * { return "profile/newsletter"; }
	 */

}
